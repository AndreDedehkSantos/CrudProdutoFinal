// <auto-generated />
using System;
using CrudProduto.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrudProduto.Migrations
{
    [DbContext(typeof(CrudProdutoContext))]
    [Migration("20200708133020_Migration2")]
    partial class Migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CrudProduto.Models.AcessorioBasico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("descricao");

                    b.Property<int>("linhaprodutoId");

                    b.Property<string>("nome");

                    b.Property<int>("quantidade");

                    b.HasKey("id");

                    b.ToTable("AcessorioBasico");
                });

            modelBuilder.Entity("CrudProduto.Models.AcessorioOpcional", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("descricao");

                    b.Property<string>("nome");

                    b.Property<int>("produtoId");

                    b.Property<int>("quantidade");

                    b.HasKey("id");

                    b.ToTable("AcessorioOpcional");
                });

            modelBuilder.Entity("CrudProduto.Models.FichaTecnica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("categoria");

                    b.Property<string>("componenteBasico");

                    b.Property<string>("componentePrimario");

                    b.Property<string>("componenteSecundario");

                    b.Property<string>("descricao");

                    b.Property<string>("observacoes");

                    b.Property<string>("subCategoria");

                    b.HasKey("id");

                    b.ToTable("FichaTecnica");
                });

            modelBuilder.Entity("CrudProduto.Models.LinhaProduto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nome");

                    b.HasKey("id");

                    b.ToTable("LinhaProduto");
                });

            modelBuilder.Entity("CrudProduto.Models.Log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("alteraco");

                    b.Property<DateTime>("dataHora");

                    b.Property<string>("descricao");

                    b.Property<int>("idUsuario");

                    b.Property<bool>("insercao");

                    b.Property<string>("manter");

                    b.HasKey("id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("CrudProduto.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("codigo");

                    b.Property<string>("comprador");

                    b.Property<DateTime>("dataCompra");

                    b.Property<int?>("fichaTecnicaid");

                    b.Property<int>("linhaProdutoid");

                    b.Property<string>("nome");

                    b.Property<int>("quantidade");

                    b.Property<bool>("status");

                    b.Property<double>("valorCompra");

                    b.HasKey("id");

                    b.HasIndex("fichaTecnicaid");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("CrudProduto.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nome");

                    b.Property<string>("senha");

                    b.HasKey("id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("CrudProduto.Models.Produto", b =>
                {
                    b.HasOne("CrudProduto.Models.FichaTecnica", "fichaTecnica")
                        .WithMany()
                        .HasForeignKey("fichaTecnicaid");
                });
#pragma warning restore 612, 618
        }
    }
}
